,"Smithsonian Conservation Biology Institute", "Lilly Dickey Woods"
,"Ordway-Swisher"                             ,"Yosemite National Park"
,"Wind River"                                 ,"Utah Forest Dynamics Plot"
,"Huai Kha Khaeng"                            ,"Barro Colorado Island",
"Zofin", "Scotty Creek")
# Sites in climate data have _ so replace space with _ to match later
fsites<- gsub(" ", "_", fsites)
path_to_climate_data <- "https://raw.githubusercontent.com/forestgeo/Climate/master/Climate_Data/CRU/CRU_v4_04/"
v<- c("cld", "dtr", "frs", "pet", "pre", "tmn", "tmp", "tmn", "tmx", "vap", "wet")
objs<- vector(mode = "list", length = length(v))
counter <- 0
for(clim_v in v) { #  clim_v is each climate variable (v)
counter<- counter + 1
print(paste0(clim_v, " ", counter))
objs[[counter]]<-read.csv(paste0(path_to_climate_data, clim_v, ".1901.2019-ForestGEO_sites-6-03.csv"))
names(objs)[counter] <- clim_v # assign names to list
# adding a col that will show the climate variable (ie cld or pet)
objs[[counter]]$clim<-  gsub(names(objs[counter]), v[counter], names(objs[counter]), ignore.case = FALSE)
}
objs[[5]]
objs[[5]] %>% View()
View(objs)
# CRU data with final sites and storage vessel list for the long format of data
CRU_fsites <- vector(mode="list", length=length(fsites)*length(v)) # I should have ten of each site (so fsites*v)
storage.vess<- vector(mode="list", length=length(fsites)*length(v)) # and I should have a storage vessel with just as manny
counter=0
for(j in fsites){ # 110 times because 11 clim vars and 10 sites
for(i in seq_along(v)){
# i is seq # 1-11 of climvar objs ----- j is fsite raw - smithsonian ---- counter is the iterative # ie 110
# for each climvar in objs we should have a smithsonian for cld smithsonian for dtr etc et
#### Select only FSITES from climvar data
counter <- counter +1 # running fsites* clim vars
print(paste0(j," counter # ", counter, " and clim var ", names(objs[i])))
CRU_fsites[[counter]] <- objs[[i]][match(j, objs[[i]]$sites.sitename),] #go through each climvar and find the specified J aka site
#### Transform data to long format
df<- as.data.frame(CRU_fsites[[counter]]) # make df object
df_long<- reshape(df, #reshape data for plot
times =gsub("X", "", names(df)[-1]),
timevar = "Date",
varying = list(colnames(df[-1])),
v.names = paste0(df$clim),
direction = "long",)
storage.vess[[counter]]<- df_long # store newly reshaped data in new storage vessel
names(storage.vess)[counter] <- j
# clean up data: date formats, climvar column, ordering the vector for later analysis.
storage.vess[[counter]]$Date<- anytime::anydate(storage.vess[[counter]]$Date) # change to Date format
storage.vess[[counter]]$climvar <- rep(names(storage.vess[[counter]])[3], times=nrow(storage.vess[[counter]])) # add the climvar column here (needs to be index)
storage.vess[[counter]][,"month"] <- format(storage.vess[[counter]][,"Date"], "%m") # add month col for later processing! --
storage.vess[[counter]]<-storage.vess[[counter]][order(as.numeric(storage.vess[[counter]]$month)),] # order the columns by month so we can use the RLE function
storage.vess[[counter]]<- storage.vess[[counter]] %>%
rename(climvar.class =climvar,
climvar.val = names(storage.vess[[counter]][3]))
# ## We'll want to exclude frs=0
storage.vess[[counter]]<-storage.vess[[counter]] %>% filter(climvar.class != "frs" & climvar.val !=0)
storage.vess[[counter]]$month <-as.integer(storage.vess[[counter]]$month) # make months ints for later analysis
}
}
storage.vess[[104]]
storage.vess[[104]] %>% View()
storage.vess[[104]] %>% names()
BCI_pre_names<- storage.vess[[104]] %>% names()
View(bci_man)
View(pet_1900s)
class(pet_1900s)
class(pet_1900s$`Date(yyyy-mm-dd)`)
class(anytime::anydate(pet_1900s$`Date(yyyy-mm-dd)`))
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$Date %>% head()
pet_1900s$Date <- anytime::anydate(pet_1900s$Date)
pet_1900s$Date %>% head()
pet_1900s %>% group_by(month=floor_date(Date, "month"))
library(lubridate)
pet_1900s %>% group_by(month=floor_date(Date, "month"))
pet_1900s<- pet_1900s %>% group_by(month=floor_date(Date, "month"))
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
# so take pre data per day and average per month
class(pet_1900s$`Date(yyyy-mm-dd)`)
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$Date <- anytime::anydate(pet_1900s$Date)
pet_1900s<- pet_1900s %>% group_by(month=floor_date(Date, "month"))
BCI_pre_names
pet_1900s<- pet_1900s %>% group_by(month=floor_date(Date, "month")) %>% summarize(climvar.val=mean(`rain (mm)`))
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
#### The standard CRU format for PRE is:
BCI_pre_names<- storage.vess[[104]] %>% names()
BCI_pre_names
# so take pre data per day and average per month
class(pet_1900s$`Date(yyyy-mm-dd)`)
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$Date <- anytime::anydate(pet_1900s$Date)
pet_1900s<- pet_1900s %>% group_by(month=floor_date(Date, "month")) %>% summarize(climvar.val=mean(`rain (mm)`))
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$DateM <- anytime::anydate(pet_1900s$Date)
View(pet_1900s)
pet_1900s %>% group_by(month=floor_date(Date, "month")) %>% summarize(climvar.val=mean(`rain (mm)`))
pet_1900s_ <- pet_1900s %>% group_by(month=floor_date(DateM, "month")) %>% summarize(climvar.val=mean(`rain (mm)`))
View(pet_1900s_)
pet_1900s_ <- pet_1900s %>% group_by(month=floor_date(DateM, "month")) %>% mean(`rain (mm)`)
pet_1900s_ <- pet_1900s %>% group_by(month=floor_date(DateM, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
View(pet_1900s_)
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
# so take pre data per day and average per month
class(pet_1900s$`Date(yyyy-mm-dd)`)
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$Date <- anytime::anydate(pet_1900s$Date)
# now make the same format as
BCI_pre_names
# get sum by month
pet_1900s <- pet_1900s %>% group_by(month=floor_date(Date, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
View(pet_1900s)
pet_1900s$DateM <- anytime::anydate(pet_1900s$Date)
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
#### The standard CRU format for PRE is:
BCI_pre_names<- storage.vess[[104]] %>% names()
# so take pre data per day and average per month
class(pet_1900s$`Date(yyyy-mm-dd)`)
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$DateM <- anytime::anydate(pet_1900s$Date)
View(pet_1900s)
class(pet_1900s$Date)
class(pet_1900s$DateM)
str(pet_1900s$DateM)
?anydate()
pet_1900s$DateM <- as.Date(pet_1900s$Date)
View(pet_1900s)
as.character.Date()
?as.Date()
pet_1900s$DateM <- as.Date(pet_1900s$Date, "%d/%dm/%y")
#### BCI precip data --------
bci_man <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/bci_cl_ra_man.csv")
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$DateM <- as.Date(pet_1900s$Date, "%d/%dm/%y")
pet_1900s$DateM <- as.Date(pet_1900s$Date, "%d/%m/%y")
pet_1900s$DateM <- as.Date(pet_1900s$Date, "%d/%m/%Y")
IsDate <- function(mydate) {
tryCatch(!is.na(as.Date(mydate, "",tryFormats = c("%Y-%m-%d", "%Y/%m/%d","%d-%m-%Y","%m-%d-%Y"))),
error = function(err) {FALSE})
}
IsDate(pet_1900s$DateM)
IsDate <- function(mydate) {
tryCatch(!is.na(as.Date(mydate, "",tryFormats = c("%Y-%m-%d", "%Y/%m/%d","%d-%m-%Y","%m-%d-%Y"))),
error = function(err) {FALSE})
}
IsDate <- function(mydate, date.format = "%d/%m/%y") {
tryCatch(!is.na(as.Date(mydate, date.format)),
error = function(err) {FALSE})
}
IsDate(pet_1900s$DateM)
IsDate <- function(mydate, date.format = "%d/%m/%y") {
tryCatch(!is.na(as.Date(mydate, date.format)),
error = function(err) {FALSE})
}
IsDate(pet_1900s$DateM)
IsDate <- function(mydate, date.format = "%Y/%m/%d") {
tryCatch(!is.na(as.Date(mydate, date.format)),
error = function(err) {FALSE})
}
IsDate(pet_1900s$DateM)
format(pet_1900s$DateM)
format(pet_1900s$DateM, "%a %b %d")
pet_1900s$check<- format(pet_1900s$DateM, "%a %b %d")
View(pet_1900s)
# get sum by month
pet_1900s <- pet_1900s %>% group_by(month=floor_date(DateM, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
BCI_pre_names
?rep()
?rep(x)
rep("Barro Colorado Island", length(pet_1900s))
rep("Barro Colorado Island", nrow(pet_1900s))
# now make the same format as
#"Barro Colorado Island" # Date #climvar.val #id # climvar.class # month
pet_1900s$sites.sitename <- rep("Barro Colorado Island", nrow(pet_1900s))
View(pet_1900s)
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
#### The standard CRU format for PRE is:
BCI_pre_names<- storage.vess[[104]] %>% names()
# so take pre data per day and average per month
class(pet_1900s$`Date(yyyy-mm-dd)`)
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$DateM <- as.Date(pet_1900s$Date, "%d/%m/%Y")
# get sum by month
pet_1900s <- pet_1900s %>% group_by(month=floor_date(DateM, "Date")) %>% summarize(climvar.val=sum(`rain (mm)`))
pet_1900s %>% group_by(month=floor_date(DateM, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
# get sum by month
pet_1900s <- pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
# now make the same format as
#"Barro Colorado Island" # Date #climvar.val #id # climvar.class # month
pet_1900s$sites.sitename <- rep("Barro Colorado Island", nrow(pet_1900s))
pet_1900s$climvar.class <- rep("pre", nrow(pet_1900s))
as.Date(pet_1900s$Date, "%m")
as.Date(pet_1900s$Date, "%m")
month(pet_1900s$Date)
pet_1900s$month<- month(pet_1900s$Date)
pet_1900s[1,2,3,4,5]
pet_1900s[c(1,2,3,4,5)]
names(pet_1900s)
BCI_pre_names
pet_1900s[c(3,1,2,4,5)]
pet_1900s<- pet_1900s[c(3,1,2,4,5)]
pet_1900s
getwd()
write.csv(pet_1900s, paste0(getwd(), "/Climate_Data/Met_Stations/BCI"), row.names = F)
write.csv(pet_1900s, paste0(getwd(), "/Climate_Data/Met_Stations/BCI/pre_1900s_BCI.csv"), row.names = F)
#### BCI precip data --------
bci_man <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/bci_cl_ra_man.csv")
View(bci_man)
View(storage.vess)
for(j in fsites){ # 110 times because 11 clim vars and 10 sites
for(i in seq_along(v)){
# i is seq # 1-11 of climvar objs ----- j is fsite raw - smithsonian ---- counter is the iterative # ie 110
# for each climvar in objs we should have a smithsonian for cld smithsonian for dtr etc et
#### Select only FSITES from climvar data
counter <- counter +1 # running fsites* clim vars
print(paste0(j," counter # ", counter, " and clim var ", names(objs[i])))
CRU_fsites[[counter]] <- objs[[i]][match(j, objs[[i]]$sites.sitename),] #go through each climvar and find the specified J aka site
#### Transform data to long format
df<- as.data.frame(CRU_fsites[[counter]]) # make df object
df_long<- reshape(df, #reshape data for plot
times =gsub("X", "", names(df)[-1]),
timevar = "Date",
varying = list(colnames(df[-1])),
v.names = paste0(df$clim),
direction = "long",)
storage.vess[[counter]]<- df_long # store newly reshaped data in new storage vessel
names(storage.vess)[counter] <- j
# clean up data: date formats, climvar column, ordering the vector for later analysis.
storage.vess[[counter]]$Date<- anytime::anydate(storage.vess[[counter]]$Date) # change to Date format
storage.vess[[counter]]$climvar <- rep(names(storage.vess[[counter]])[3], times=nrow(storage.vess[[counter]])) # add the climvar column here (needs to be index)
storage.vess[[counter]][,"month"] <- format(storage.vess[[counter]][,"Date"], "%m") # add month col for later processing! --
storage.vess[[counter]]<-storage.vess[[counter]][order(as.numeric(storage.vess[[counter]]$month)),] # order the columns by month so we can use the RLE function
storage.vess[[counter]]<- storage.vess[[counter]] %>%
rename(climvar.class =climvar,
climvar.val = names(storage.vess[[counter]][3]))
# ## We'll want to exclude frs=0
storage.vess[[counter]]<-storage.vess[[counter]] %>% filter(climvar.class != "frs" & climvar.val !=0)
storage.vess[[counter]]$month <-as.integer(storage.vess[[counter]]$month) # make months ints for later analysis
}
}
# CRU data with final sites and storage vessel list for the long format of data
CRU_fsites <- vector(mode="list", length=length(fsites)*length(v)) # I should have ten of each site (so fsites*v)
storage.vess<- vector(mode="list", length=length(fsites)*length(v)) # and I should have a storage vessel with just as manny
counter=0
for(j in fsites){ # 110 times because 11 clim vars and 10 sites
for(i in seq_along(v)){
# i is seq # 1-11 of climvar objs ----- j is fsite raw - smithsonian ---- counter is the iterative # ie 110
# for each climvar in objs we should have a smithsonian for cld smithsonian for dtr etc et
#### Select only FSITES from climvar data
counter <- counter +1 # running fsites* clim vars
print(paste0(j," counter # ", counter, " and clim var ", names(objs[i])))
CRU_fsites[[counter]] <- objs[[i]][match(j, objs[[i]]$sites.sitename),] #go through each climvar and find the specified J aka site
#### Transform data to long format
df<- as.data.frame(CRU_fsites[[counter]]) # make df object
df_long<- reshape(df, #reshape data for plot
times =gsub("X", "", names(df)[-1]),
timevar = "Date",
varying = list(colnames(df[-1])),
v.names = paste0(df$clim),
direction = "long",)
storage.vess[[counter]]<- df_long # store newly reshaped data in new storage vessel
names(storage.vess)[counter] <- j
# clean up data: date formats, climvar column, ordering the vector for later analysis.
storage.vess[[counter]]$Date<- anytime::anydate(storage.vess[[counter]]$Date) # change to Date format
storage.vess[[counter]]$climvar <- rep(names(storage.vess[[counter]])[3], times=nrow(storage.vess[[counter]])) # add the climvar column here (needs to be index)
storage.vess[[counter]][,"month"] <- format(storage.vess[[counter]][,"Date"], "%m") # add month col for later processing! --
storage.vess[[counter]]<-storage.vess[[counter]][order(as.numeric(storage.vess[[counter]]$month)),] # order the columns by month so we can use the RLE function
storage.vess[[counter]]<- storage.vess[[counter]] %>%
rename(climvar.class =climvar,
climvar.val = names(storage.vess[[counter]][3]))
# ## We'll want to exclude frs=0
storage.vess[[counter]]<-storage.vess[[counter]] %>% filter(climvar.class != "frs" & climvar.val !=0)
storage.vess[[counter]]$month <-as.integer(storage.vess[[counter]]$month) # make months ints for later analysis
}
}
storage.vess[[110]]
storage.vess[[110]] %>% View()
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
#### The standard CRU format for PRE is:
BCI_pre_names<- storage.vess[[104]] %>% names()
# so take pre data per day and average per month
class(pet_1900s$`Date(yyyy-mm-dd)`)
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$DateM <- as.Date(pet_1900s$Date, "%d/%m/%Y")
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val=sum(`rain (mm)`),
climvar.val2 =count())
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val=sum(`rain (mm)`),climvar.val2 =count())
# for daily WET data
# need to sum the # of days per month that were was precip if precip was above > 0.1mm
pet_1900s %>%
# get sum by month
pet_1900s <- pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarise_all(funs(sum, count))
View(bci_man)
# for daily WET data
# need to sum the # of days per month that were was precip if precip was above > 0.1mm
pet_1900s %>%
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val2 =count())
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val2 =count())
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val2 =tally())
pet_1900s %>% group_by(Date=floor_date(DateM, "month"))
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val2 =count(DateM))
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val2 =count(`rain (mm)`))
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val2 =tally(`rain (mm)`))
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val2 =tally())
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% tally()
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% filter(`rain (mm)`>.1)
pet_1900s %>% group_by(Date=floor_date(DateM, "month")) %>% filter(`rain (mm)`>.1) %>% tally()
# Clean environment ####
rm(list = ls())
#### BCI precip data --------
bci_man <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/bci_cl_ra_man.csv")
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
#### The standard CRU format for PRE is:
BCI_pre_names<- storage.vess[[104]] %>% names()
# so take pre data per day and average per month
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$DateM <- as.Date(pet_1900s$Date, "%d/%m/%Y")
pet_1900s$sites.sitename <- rep("Barro Colorado Island", nrow(pet_1900s))
pet_1900s$month<- month(pet_1900s$Date)
View(pet_1900s)
# Clean environment ####
rm(list = ls())
#### BCI precip data --------
bci_man <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/bci_cl_ra_man.csv")
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
#### The standard CRU format for PRE is:
BCI_pre_names<- storage.vess[[104]] %>% names()
# so take pre data per day and average per month
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pet_1900s$Date <- as.Date(pet_1900s$Date, "%d/%m/%Y")
pet_1900s$sites.sitename <- rep("Barro Colorado Island", nrow(pet_1900s))
pet_1900s$month<- month(pet_1900s$Date)
pet_1900s %>% group_by(Date=floor_date(Date, "month")) %>% filter(`rain (mm)`>.1) %>% tally()
wet_1900s<- pet_1900s %>% group_by(Date=floor_date(Date, "month")) %>% filter(`rain (mm)`>.1) %>% tally()
View(bci_man)
pet_1970s<- bci_man %>% rename(Date =date)
View(pet_1970s)
pet_1970s<- bci_man %>% rename(Date =date, avg_rain=ra)
pet_1970s$Dating <- as.Date(pet_1970s$Date, "%d/%m/%Y")
pet_1970s$Date <- as.Date(pet_1970s$Date, "%d/%m/%Y")
## FOR WET FORMATTING
wet_1970s<- pet_1970s %>% group_by(Date=floor_date(Date, "month")) %>% filter(avg_rain>.1) %>% tally()
## FOR PRE FORMATTING
pet_1970s <- pet_1970s %>% group_by(Date=floor_date(DateM, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
## FOR PRE FORMATTING
pet_1970s <- pet_1970s %>% group_by(Date=floor_date(Date, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
## FOR PRE FORMATTING
pet_1970s <- pet_1970s %>% group_by(Date=floor_date(Date, "month")) %>% summarize(climvar.val=avg_rain))
## FOR PRE FORMATTING
pet_1970s <- pet_1970s %>% group_by(Date=floor_date(Date, "month")) %>% summarize(climvar.val=sum(avg_rain))
View(wet_1970s)
View(pet_1900s)
1970_PET<- bci_man %>% rename(Date =date, avg_rain=ra)
# Clean environment ####
rm(list = ls())
#### BCI precip data --------
bci_man <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/bci_cl_ra_man.csv")
pet_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
#### The standard CRU format for PRE is:
BCI_pre_names<- storage.vess[[104]] %>% names()
## change names, format dates for 1900s and 1970s data
pet_1900s<- pet_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
seventies_PRE<- bci_man %>% rename(Date =date, avg_rain=ra)
seventies_PRE$Date <- as.Date(seventies_PRE$Date, "%d/%m/%Y")
pet_1900s$Date <- as.Date(pet_1900s$Date, "%d/%m/%Y")
seventies_PRE %>% group_by(Date=floor_date(Date, "month")) %>% summarize(climvar.val=sum(avg_rain))
# Clean environment ####
rm(list = ls())
#### BCI precip data --------
bci_man <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/bci_cl_ra_man.csv")
pre_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
#### The standard CRU format for PRE is:
BCI_pre_names<- storage.vess[[104]] %>% names()
## Change names, format dates for 1900s and 1970s data
pre_1900s<- pre_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
seventies_PRE<- bci_man %>% rename(Date =date, avg_rain=ra)
seventies_PRE$Date <- as.Date(seventies_PRE$Date, "%d/%m/%Y")
pre_1900s$Date <- as.Date(pre_1900s$Date, "%d/%m/%Y")
## FOR PRE FORMATTING ----
seventies_PRE <- seventies_PRE %>% group_by(Date=floor_date(Date, "month")) %>% summarize(climvar.val=sum(avg_rain))
pre_1900s <- pre_1900s %>% group_by(Date=floor_date(Date, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
View(pre_1900s)
View(seventies_PRE)
pre_BCI <- rbind(seventies_PRE, pre_1900s)
pre_BCI$sites.sitename <- rep("Barro Colorado Island", nrow(pre_BCI))
pre_BCI$month<- month(pre_BCI$Date)
pre_1900s$climvar.class <- rep("pre", nrow(pre_1900s))
pre_BCI$climvar.class <- rep("pre", nrow(pre_1900s))
pre_BCI$climvar.class <- rep("pre", nrow(pre_BCI))
View(pre_BCI)
# bind these puppies, add relevent cols, and write.csv
pre_BCI <- rbind(pre_1900s, seventies_PRE)
# bind these puppies, add relevent cols, and write.csv
pre_BCI <- rbind(pre_1900s, seventies_PRE)
# Clean environment ####
rm(list = ls())
#### BCI precip data --------
bci_man <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/bci_cl_ra_man.csv")
#### BCI precip data --------
seventies_PRE <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/bci_cl_ra_man.csv")
pre_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
## Change names, format dates for 1900s and 1970s data
pre_1900s<- pre_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
pre_1900s$Date <- as.Date(pre_1900s$Date, "%d/%m/%Y")
seventies_PRE<- seventies_PRE %>% rename(Date =date, avg_rain=ra)
seventies_PRE$Date <- as.Date(seventies_PRE$Date, "%d/%m/%Y")
## FOR PRE FORMATTING ----
seventies_PRE <- seventies_PRE %>% group_by(Date=floor_date(Date, "month")) %>% summarize(climvar.val=sum(avg_rain))
pre_1900s <- pre_1900s %>% group_by(Date=floor_date(Date, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
# bind these puppies, add relevent cols, and write.csv
pre_BCI <- rbind(pre_1900s, seventies_PRE)
pre_BCI$sites.sitename <- rep("Barro Colorado Island", nrow(pre_BCI))
pre_BCI$month<- month(pre_BCI$Date)
pre_BCI$climvar.class <- rep("pre", nrow(pre_BCI))
View(pre_BCI)
pre_1900s[c(3,1,2,5,4)]
pre_BCI[c(3,1,2,5,4)]
View(pre_BCI)
# rearrange cols to match long format
pre_BCI<- pre_BCI[c(3,1,2,5,4)]
## write.csv for PRE
write.csv(pre_BCI, paste0(getwd(), "/Climate_Data/Met_Stations/BCI/pre_BCI.csv"), row.names = F)
rain_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
#### BCI precip data --------
seventies_rain <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/bci_cl_ra_man.csv")
rain_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
## Change names, format dates for 1900s and 1970s data
rain_1900s<- rain_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
rain_1900s$Date <- as.Date(rain_1900s$Date, "%d/%m/%Y")
# Clean environment ####
rm(list = ls())
#### BCI precip data --------
seventies_rain <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/bci_cl_ra_man.csv")
rain_1900s <- read_csv("C:/Users/GonzalezB2/Desktop/Smithsonian/Climate/Climate_Data/Met_Stations/BCI/El_Claro_precip_starting_1929/20180168_bci_manual_cl_ra/rain_acp_ra_1929_1971.csv")
## Change names, format dates for 1900s and 1970s data
rain_1900s<- rain_1900s %>% rename(Date =`Date(yyyy-mm-dd)`)
rain_1900s$Date <- as.Date(rain_1900s$Date, "%d/%m/%Y")
seventies_rain<- seventies_rain %>% rename(Date =date, avg_rain=ra)
seventies_rain$Date <- as.Date(seventies_rain$Date, "%d/%m/%Y")
## FOR PRE FORMATTING ----
seventies_PRE <- seventies_rain %>% group_by(Date=floor_date(Date, "month")) %>% summarize(climvar.val=sum(avg_rain))
pre_1900s <- rain_1900s %>% group_by(Date=floor_date(Date, "month")) %>% summarize(climvar.val=sum(`rain (mm)`))
# bind these puppies, add relevent cols, and write.csv
pre_BCI <- rbind(pre_1900s, seventies_PRE)
pre_BCI$sites.sitename <- rep("Barro Colorado Island", nrow(pre_BCI))
pre_BCI$month<- month(pre_BCI$Date)
pre_BCI$climvar.class <- rep("pre", nrow(pre_BCI))
# rearrange cols to match long format
pre_BCI<- pre_BCI[c(3,1,2,5,4)]
ore_BCI
pre_BCI %>% head()
View(seventies_rain)
View(seventies_PRE)
View(rain_1900s)
wet_1900s<- rain_1900s %>% group_by(Date=floor_date(Date, "month")) %>% filter(`rain (mm)`>.1) %>% tally()
wet_1970s<- seventies_rain %>% group_by(Date=floor_date(Date, "month")) %>% filter(avg_rain>.1) %>% tally()
wet_1900s
wet_1970s
# bind these puppies, add relevent cols, and write.csv
wet_BCI <- rbind(wet_1900s, wet_1970s)
wet_BCI$sites.sitename <- rep("Barro Colorado Island", nrow(wet_BCI))
wet_BCI$month<- month(wet_BCI$Date)
wet_BCI$climvar.class <- rep("wet", nrow(pre_BCI))
wet_BCI$climvar.class <- rep("wet", nrow(wet_BCI))
wet_BCI %>% head()
wet_BCI[c(3,1,2,5,4)] %>% head()
View(pre_BCI)
wet_BCI %>% rename(climvar.val)
wet_BCI %>% rename(climvar.val= n)
wet_BCI<- wet_BCI %>% rename(climvar.val= n)
wet_BCI[c(3,1,2,5,4)]
# rearrange cols to match long format
wet_BCI<- wet_BCI[c(3,1,2,5,4)]
## write.csv for PRE
write.csv(wet_BCI, paste0(getwd(), "/Climate_Data/Met_Stations/BCI/wet_BCI.csv"), row.names = F)
# Load data ####
CRU_PET <- read.csv("CRU_v4_04/pet.1901.2019-ForestGEO_sites-6-03.csv")
getwd()
# Load data ####
CRU_PET <- read.csv("CRU/CRU_v4_04/pet.1901.2019-ForestGEO_sites-6-03.csv")
# Load data ####
CRU_PET <- read.csv("Climate_Data/CRU/CRU_v4_04/pet.1901.2019-ForestGEO_sites-6-03.csv")
#### Sites --------
# ForestGeo sites (and their locations) found in github (all 69)
ForestGEO_sites <- read.csv("https://raw.githubusercontent.com/forestgeo/Site-Data/master/ForestGEO_site_data.csv")
path_to_climate_data <- "https://raw.githubusercontent.com/forestgeo/Climate/master/Climate_Data/CRU/CRU_v4_04/"
path_to_climate_data <- "https://raw.githubusercontent.com/forestgeo/Climate/master/Gridded_Data_Products/Historical%20Climate%20Data/CRU_v4_04/"
path_to_climate_data <- "https://raw.githubusercontent.com/forestgeo/Climate/master/Gridded_Data_Products/Historical%20Climate%20Data/CRU_v4_04/"
# ForestGeo sites (and their locations) found in github
ForestGEO_sites <- read.csv("https://raw.githubusercontent.com/forestgeo/Site-Data/master/ForestGEO_site_data.csv")
getwd()
#### load data #### -------
path = "/Other_environmental_data/NOAA_ESRL_C02_data/"
# moana loa data // NOAA ice core data
moana <-read.csv(paste0(getwd(), path, "ESRL_Mauna_Loa_co2_data.csv"))
#### load data #### -------
path = "/Other_environmental_data/CO2_data/NOAA_ESRL_C02_data/"
# moana loa data // NOAA ice core data
moana <-read.csv(paste0(getwd(), path, "ESRL_Mauna_Loa_co2_data.csv"))
#### load data #### -------
path = "Other_environmental_data/CO2_data/NOAA_ESRL_CO2/"
# moana loa data // NOAA ice core data
moana <-read.csv(paste0(getwd(), path, "ESRL_Mauna_Loa_co2_data.csv"))
paste0(getwd(), path, "ESRL_Mauna_Loa_co2_data.csv")
#### load data #### -------
path = "/Other_environmental_data/CO2_data/NOAA_ESRL_CO2/"
# moana loa data // NOAA ice core data
moana <-read.csv(paste0(getwd(), path, "ESRL_Mauna_Loa_co2_data.csv"))
ice_core <- read_excel(paste0(getwd(), path, "NOAA_law2006_ice_core_data.xls"),sheet= "SplineFit20yr")
library(readxl)
ice_core <- read_excel(paste0(getwd(), path, "NOAA_law2006_ice_core_data.xls"),sheet= "SplineFit20yr")
